# this trace file is for a X=4,Y=1 array (plus an I/O row on south side)
# it is automatically translated into a verilog rom file by the makefile
#

# setup destination address of outgoing packets for accelerator at 0,1 to address 2
# sending packet (addr=00000000000000000000, op=01, op_ex=1111, data=00000000000000000000000000000010, return_pkt=100, y_cord=0, x_cord=01
#AAAAAAAAAAAAAAAAAAAOOEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDRRRYXX
0000000000000000000001111100000000000000000000000000000010100001

# setup destination X,Y of outgoing packets for accelerator at 0,1 to 0,2
# sending packet (addr=00000000000000000001, op=01, op_ex=1111, data=00000000000000000000000000000010, return_pkt=100, y_cord=0, x_cord=01
#AAAAAAAAAAAAAAAAAAAOOEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDRRRYXX
0000000000000000000101111100000000000000000000000000000010100001

# setup destination address of outgoing packets for accelerator at 0,2 to address 2
# sending packet (addr=00000000000000000000, op=01, op_ex=1111, data=00000000000000000000000000000010, return_pkt=100, y_cord=0, x_cord=10
#AAAAAAAAAAAAAAAAAAAOOEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDRRRYXX
0000000000000000000001111100000000000000000000000000000010100010

# setup destination X,Y of outgoing packets for accelerator at 0,2 to 0,3
# sending packet (addr=00000000000000000001, op=01, op_ex=1111, data=00000000000000000000000000000011, return_pkt=100, y_cord=0, x_cord=10
#AAAAAAAAAAAAAAAAAAAOOEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDRRRYXX
0000000000000000000101111100000000000000000000000000000011100010

# setup destination address of outgoing packets for accelerator at 0,3 to binary 100000000001
# sending packet (addr=00000000000000000000, op=01, op_ex=1111, data=00000000000000000001000000000001, return_pkt=100, y_cord=0, x_cord=11
#AAAAAAAAAAAAAAAAAAAOOEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDRRRYXX
0000000000000000000001111100000000000000000001000000000001100011

# setup destination X,Y of outgoing packets for accelerator at 0,3 to 1,1
# sending packet (addr=00000000000000000001, op=01, op_ex=1111, data=00000000000000000000000000000000, return_pkt=100, y_cord=0, x_cord=11
#AAAAAAAAAAAAAAAAAAAOOEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDRRRYXX
0000000000000000000101111100000000000000000000000000000101100011

# send 8 words data to accelerator at 0,1; it will be forwarded to 0,2, then to 0,3 and then to 1,1 printer
# sending packet (addr=00000000000000000010, op=01, op_ex=1111, data=10111110111011101110111011101XXX, return_pkt=100, y_cord=0, x_cord=01
#AAAAAAAAAAAAAAAAAAAOOEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDRRRYXX
0000000000000000001001111110111110111011101110111011100000100001
0000000000000000001001111110111110111011101110111011100001100001
0000000000000000001001111110111110111011101110111011100010100001
0000000000000000001001111110111110111011101110111011100011100001
0000000000000000001001111110111110111011101110111011100100100001
0000000000000000001001111110111110111011101110111011100101100001
0000000000000000001001111110111110111011101110111011100110100001
0000000000000000001001111110111110111011101110111011100111100001


# setup destination address of 1,3 accelerator to a binary 10000000000000:
# sending packet (addr=00000000000000000000, op=01, op_ex=1111, data=00000000000000000001000000000000, return_pkt=100, y_cord=0, x_cord=11
#AAAAAAAAAAAAAAAAAAAOOEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDRRRYXX
0000000000000000000001111100000000000000000001000000000000100011

# send a final packet 0,1; which will get forwarded to 0,2 and then to 0,3 and then to 1,1, which will terminate (DATA=0hCAFECODE)
# sending packet (addr=00000000000000000010, op=01, op_ex=1111, data=11001010111111101100000011011110, return_pkt=100, y_cord=0, x_cord=01
#AAAAAAAAAAAAAAAAAAAOOEEEEDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDRRRYXX
0000000000000000001001111111001010111111101100000011011110100001

